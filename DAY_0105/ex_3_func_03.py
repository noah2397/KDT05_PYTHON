# ----------------------------------------------------------------------
# 다양한 함수의 형태 - (3) 반환값 없는 함수
# ----------------------------------------------------------------------
# 함수기능 : 2정수를 덧셈 후 출력해주는 기능
# 함수이름 : addTwo
# 매개변수 : x,y
# 반환 값 : 없음
# ----------------------------------------------------------------------
'''
def addTwo(x,y) :
    value=x+y
    print(f'{x}+{y}={value}')

# 함수 사용 즉 함수 호출 ===================================================
addTwo(10,3)

# 함수 호출 시에 매개변수 개수와 동일하게 데이터 전달해야 함!!
# ERROR ---------------------------------------------------
# addTwo(10) # 매개변수를 한개만 넣어 오류 방출
# addTwo(10,10,10) # 매개변수를 너무 많이 넣어 오류 방출
#-------------------------------------------------------------------------



# ----------------------------------------------------------------------
# 함수기능 : 영어 단어를 입력 받아서 모두 대문자로 변환해주는 기능
# 함수이름 : convertCase
# 매개변수 : word
# 반환 값 : 없음
# ----------------------------------------------------------------------
def convertCase(word) :
    print(word.upper())

convertCase("asdfas")


# ----------------------------------------------------------------------
# 함수기능 : 영어 단어를 입력 받아서 모두 대문자로 변환해주는 기능
# 함수이름 : convertCase2
# 매개변수 : str타입의 원소로 구성된 list
# 반환 값 : 없음 ==> 아무 일을 안 하게 됨 ==> return 하기
# ----------------------------------------------------------------------
def convertCase2(dataList) :
    for i in range(len(dataList)) :
        dataList[i]=dataList[i].upper()
    print(dataList)

convertCase2(['a','b','c','d'])
'''

def convertCase2(dataList) :
    for i, value in enumerate(dataList) :
        dataList[i]=value.upper()

convertCase2(['apple','banana','cabatoo','danggo'])
# 함수 사용 즉, 함수 호출--------------------------------------
datas=['Apple','Banana',"Mango"]
print(f'[BF] {datas} ')
convertCase2(datas)
print(f'[AF] {datas} ')
